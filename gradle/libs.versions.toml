[versions]
# Kotlin
kotlin = "1.8.21"

koin = "3.3.3"
koinCompose = "3.4.2"

# Compose
activityCompose = "1.7.1"
compose = "1.4.2"
composeCompiler = "1.4.7"

# Plugins
versionUpdater = "0.42.0"
detekt = "1.22.0"
androidGradlePlugin = "8.0.0"
toolchainsResolver = "0.4.0"
ksp = "1.8.10-1.0.9"

# Android libraries
lifecycle = "2.6.1"
workManager = "2.8.1"
material3 = "1.1.0-ะบั01"
androidCore = "1.10.0"
coroutines = "1.6.4"
dataStore = "1.1.0-dev01"
playServicesAuth = "20.5.0"
serialization = "1.5.0"

# third party libs
firebase = "32.0.0"
crashlyticsPlugin = "2.9.4"
gservicesPlugin = "4.3.15"
napier = "2.6.1"
ktor = "2.2.4"

# testing
junit = "4.13.2"
junitExt = "1.1.5"
kaspresso = "1.5.1"

[libraries]
# Android libs
androidCore = { module = "androidx.core:core-ktx", version.ref = "androidCore" }
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
composeCompiler = { module = "androidx.compose.compiler:compiler", version.ref = "composeCompiler" }
composeUI = { module = "androidx.compose.ui:ui", version.ref = "compose" }
composeMaterial = { module = "androidx.compose.material:material", version.ref = "compose" }
composeFoundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
composeTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
vmCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }

dataStorePrefs = { module = "androidx.datastore:datastore-preferences-core", version.ref = "dataStore" }
dataStoreOkio = { module = "androidx.datastore:datastore-core-okio", version.ref = "dataStore" }
lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycleCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
playServicesAuth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
workManager = { module = "androidx.work:work-runtime-ktx", version.ref = "workManager" }

coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
composeMaterial3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }

# third party libs
firebase = { module = "com.google.firebase:firebase-bom", version.ref = "firebase" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

# testing
junit = { module = "junit:junit", version.ref = "junit" }
junitExt = { module = "androidx.test.ext:junit", version.ref = "junitExt" }
kaspresso = { module = "com.kaspersky.android-components:kaspresso-compose-support", version.ref = "kaspresso" }
workManagerTest = { module = "androidx.work:work-testing", version.ref = "workManager" }

[plugins]
appPlugin = { id = "com.android.application", version.ref = "androidGradlePlugin" }
androidPlugin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
crashlyticsPlugin = { id = "com.google.firebase.crashlytics", version.ref = "crashlyticsPlugin" }
gservicesPlugin = { id = "com.google.gms.google-services", version.ref = "gservicesPlugin" }
kspPlugin = { id = "com.google.devtools.ksp", version.ref = "ksp" }
multiplatformPlugin = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serializationPlugin = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
libraryPlugin = { id = "com.android.library", version.ref = "androidGradlePlugin" }
toolchainsResolverPlugin = { id = "org.gradle.toolchains.foojay-resolver-convention", version.ref = "toolchainsResolver" }

# Google
[bundles]
